# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /api/student/createStudent:
        post:
            tags:
                - Student
            operationId: Student_CreateStudent
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/student.v1.CreateStudentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/student.v1.CreateStudentReply'
    /api/student/deleteStudent/{ID}:
        delete:
            tags:
                - Student
            operationId: Student_DeleteStudent
            parameters:
                - name: ID
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/student.v1.DeleteStudentReply'
    /api/student/getStuList:
        get:
            tags:
                - Student
            operationId: Student_ListStudent
            parameters:
                - name: pageNo
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: id
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: name
                  in: query
                  schema:
                    type: string
                - name: info
                  in: query
                  schema:
                    type: string
                - name: status
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/student.v1.ListStudentReply'
    /api/student/getStudent/{ID}:
        get:
            tags:
                - Student
            operationId: Student_GetStudent
            parameters:
                - name: ID
                  in: path
                  required: true
                  schema:
                    type: integer
                    format: int32
                - name: name
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/student.v1.GetStudentReply'
    /api/student/updateStudent:
        patch:
            tags:
                - Student
            operationId: Student_UpdateStudent
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/student.v1.UpdateStudentRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/student.v1.UpdateStudentReply'
    /helloworld/{name}:
        get:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            parameters:
                - name: name
                  in: path
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
    v1/greeter/say_hello:
        post:
            tags:
                - Greeter
            description: Sends a greeting
            operationId: Greeter_SayHello
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/helloworld.v1.HelloRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/helloworld.v1.HelloReply'
components:
    schemas:
        helloworld.v1.HelloReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        helloworld.v1.HelloRequest:
            type: object
            properties:
                name:
                    type: string
            description: The request message containing the user's name.
        student.v1.CreateStudentReply:
            type: object
            properties:
                ID:
                    type: integer
                    format: int32
                Name:
                    type: string
                Info:
                    type: string
                Status:
                    type: integer
                    format: int32
        student.v1.CreateStudentRequest:
            type: object
            properties:
                Name:
                    type: string
                Info:
                    type: string
                Status:
                    type: integer
                    format: int32
        student.v1.DeleteStudentReply:
            type: object
            properties:
                ID:
                    type: integer
                    format: int32
                Name:
                    type: string
                Info:
                    type: string
                Status:
                    type: integer
                    format: int32
        student.v1.GetStudentReply:
            type: object
            properties:
                ID:
                    type: integer
                    format: int32
                Name:
                    type: string
                Info:
                    type: string
                Status:
                    type: integer
                    format: int32
                UpdatedAt:
                    type: string
                CreatedAt:
                    type: string
        student.v1.ListStudentReply:
            type: object
            properties:
                totalCount:
                    type: string
                pageNo:
                    type: integer
                    format: int32
                pageSize:
                    type: integer
                    format: int32
                errCode:
                    type: integer
                    format: int32
                errMsg:
                    type: integer
                    format: int32
                data:
                    type: array
                    items:
                        $ref: '#/components/schemas/student.v1.StudentReply'
        student.v1.StudentReply:
            type: object
            properties:
                ID:
                    type: integer
                    format: int32
                Name:
                    type: string
                Info:
                    type: string
                Status:
                    type: integer
                    format: int32
        student.v1.UpdateStudentReply:
            type: object
            properties:
                ID:
                    type: integer
                    format: int32
                Name:
                    type: string
                Info:
                    type: string
                Status:
                    type: integer
                    format: int32
        student.v1.UpdateStudentRequest:
            type: object
            properties:
                ID:
                    type: integer
                    format: int32
                Name:
                    type: string
                Info:
                    type: string
                Status:
                    type: integer
                    format: int32
tags:
    - name: Greeter
      description: The greeting service definition.
    - name: Student
      description: |-
        1、使用命令新建student.proto
        kratos proto add api/student/v1/student.proto
         2、使用命令生成pb相关代码
         make api 或者
         kratos proto client api/student/v1/student.proto
